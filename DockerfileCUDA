FROM nvidia/cuda:12.3.2-devel-ubuntu22.04 AS base

ENV SOURCE_DIR=/app
ENV POETRY_PATH=/etc/poetry

ENV POETRY_VERSION=1.3.2

LABEL maintainer="p.kohl@fh-aachen.de" \
        name="Active Learning Evaluation Framework" \
        version="0.1.0"

# Install python 3.8
RUN apt update && apt install python3 -y

RUN apt-get install curl git wget python3-venv -y && \
    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false && \
    rm -rf /var/lib/apt/lists/*

# Install miniforge
RUN curl -L -O "https://github.com/conda-forge/miniforge/releases/download/24.3.0-0/Mambaforge-24.3.0-0-Linux-x86_64.sh" &&  \
    bash Mambaforge-24.3.0-0-Linux-x86_64.sh -b -p "/opt/conda"

# Install poetry
RUN curl -sSL https://install.python-poetry.org | POETRY_HOME=${POETRY_PATH} python3 -

ENV PATH="${POETRY_PATH}/bin:${PATH}"
ENV PATH=/opt/conda/bin:${PATH}

FROM base AS runtime

COPY ale/ ${SOURCE_DIR}/ale
COPY pyproject.toml README.md poetry.toml poetry.lock dev-setup.sh ale-cuda.yaml ${SOURCE_DIR}/
COPY .git/ ${SOURCE_DIR}/.git/

RUN /bin/bash -c "source ${SOURCE_DIR}/dev-setup.sh ${SOURCE_DIR}/ale-cuda.yaml"

#RUN conda run --no-capture-output -n ale-cuda pip install --no-build-isolation --no-deps -e ${SOURCE_DIR}

WORKDIR ${SOURCE_DIR}

RUN conda run --no-capture-output -n ale-cuda poetry install

CMD ["conda", "run", "--no-capture-output", "-n", "ale-cuda", "python", "ale/main.py"]
